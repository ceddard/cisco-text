services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: cisco-text-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DEBUG=false
    networks:
      - app-network
    volumes:
      - ./src:/app/src
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: cisco-text-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6380:6379"
    networks:
      - evolution-net
      - default

  redis-commander:
    image: ghcr.io/joeferner/redis-commander:latest
    container_name: cisco-text-redis-commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - app-network
      - evolution-net

networks:
  app-network:
    driver: bridge
  evolution-net:
    driver: bridge

volumes:
  redis-data:
  app-network:
    driver: bridge
